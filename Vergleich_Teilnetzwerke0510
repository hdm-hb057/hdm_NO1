# Edge- und Nodelist zusammenf端hren
  
  library(igraph)
# liest die Dateien direkt aus dem github-Verzeichnis ein
el <- read.csv("https://raw.githubusercontent.com/kh107/hdm_NO1/master/Edgelist0410.csv", header=T, as.is=T, sep = ",")
nodes <- read.csv("https://raw.githubusercontent.com/kh107/hdm_NO1/master/Nodelist0410.csv", header=T, as.is=T, sep = ",")
# pr端ft, ob alle Variablen eingelesen wurden
head(el)
head(nodes)
# wandelt die edgelist in eine Matrix um und baut das igraph-Objekt
hties <-as.matrix(el)
dfb <- graph_from_data_frame(d=hties, vertices=nodes, directed=F)
dfb

plot(dfb)


# Teilnetzwerk soziales Engagement
list.edge.attributes(dfb)
subgraph.edges(dfb, E(dfb)[relationship == 1]) 
soz <- subgraph.edges(dfb, E(dfb)[relationship == 1])
plot(soz)

# Teilnetzwerkt Werbekooperation
list.edge.attributes(dfb)
subgraph.edges(dfb, E(dfb)[relationship == 2]) 
werb <- subgraph.edges(dfb, E(dfb)[relationship == 2])
plot(werb)

# Darstellung der Layouts
# 1,2 = nebeneinander; 2,1 = 端bereinander 
par(mfrow=c(1,2), mar=c(0,0,3,0))

# Ausf端hrung der Nebeneinanderstellung
plot(werb, layout=layout_with_kk, main="Werbekooperationen")
plot(soz, layout=layout_with_kk, main="soziales Engagement")

